# soil metadata
metaFP <- "soil_metadata.tsv"
meta <- read.delim(file=metaFP, sep = "\t")
# OTU table
otuFP <- "mpt_export//filtered_table_export//filtered-feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# taxonomy file
taxFP <- "mpt_export//taxonomy_export//taxonomy.tsv"
tax <- read.delim(file=taxFP, sep = "\t")
# phylogenetic tree
phyloFP <- "mpt_export//rooted_tree_export//tree.nwk"
phylo <- read.tree(file=phyloFP)
### Aim 2: What species indicators do we see arise in A vs O horizons?
### Code
## Load in the 'dplyr', 'tidyverse', and 'ape' package
library(dplyr)
library(phyloseq)
library(ape)
library(indicspecies)
## Load in the soil metadata, OTU table, taxonomy file, and phylogenetic tree
# soil metadata
metaFP <- "soil_metadata.tsv"
meta <- read.delim(file=metaFP, sep = "\t")
# OTU table
otuFP <- "mpt_export//filtered_table_export//filtered-feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# taxonomy file
taxFP <- "mpt_export//taxonomy_export//taxonomy.tsv"
tax <- read.delim(file=taxFP, sep = "\t")
# phylogenetic tree
phyloFP <- "mpt_export//rooted_tree_export//tree.nwk"
phylo <- read.tree(file=phyloFP)
View(otu)
# Format OTU table as a matrix with rownames and colnames as OTUs and sampleIDs, respectively
# Save everything except first column (X.OTU.ID) into a matrix
otu_mat <- as.matrix(otu[,-1])
# Make first column (X.OTU.ID) the rownames of the new matrix
rownames(otu_mat) <- otu$`X.OTU.ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
View(otu_mat)
View(meta)
# Format metadata
# Save everything except sample_name as new data frame
samp_df <- as.data.frame(meta[,-1])
# Make sample_name the rownames
rownames(samp_df)<- meta$'sample_name'
# Make phyloseq sample data with sample_data() function
SAMP <- sample_data(samp_df)
class(SAMP)
View(samp_df)
View(SAMP)
# Formatting taxonomy
# Convert taxon strings to a table with separate taxa rank columns
tax_mat <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
### Aim 2: What species indicators do we see arise in A vs O horizons?
### Code
# Install the indicspecies package
install.packages("indicspecies")
## Load in the 'tidyverse', 'dplyr', 'phyloseq', 'ape', and 'indicspecies' package
library(tidyverse)
library(dplyr)
library(phyloseq)
library(ape)
library(indicspecies)
## Load in the soil metadata, OTU table, taxonomy file, and phylogenetic tree
# soil metadata
metaFP <- "soil_metadata.tsv"
meta <- read.delim(file=metaFP, sep = "\t")
# OTU table
otuFP <- "mpt_export//filtered_table_export//filtered-feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# taxonomy file
taxFP <- "mpt_export//taxonomy_export//taxonomy.tsv"
tax <- read.delim(file=taxFP, sep = "\t")
# phylogenetic tree
phyloFP <- "mpt_export//rooted_tree_export//tree.nwk"
phylo <- read.tree(file=phyloFP)
## Adjust files to be read into a phyloseq object. Make the phyloseq object.
# Format OTU table as a matrix with rownames and colnames as OTUs and sampleIDs, respectively
# Save everything except first column (X.OTU.ID) into a matrix
otu_mat <- as.matrix(otu[,-1])
# Make first column (X.OTU.ID) the rownames of the new matrix
rownames(otu_mat) <- otu$`X.OTU.ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
# Format metadata
# Save everything except sample_name as new data frame
samp_df <- as.data.frame(meta[,-1])
# Make sample_name the rownames
rownames(samp_df)<- meta$'sample_name'
# Make phyloseq sample data with sample_data() function
SAMP <- sample_data(samp_df)
class(SAMP)
# Formatting taxonomy
# Convert taxon strings to a table with separate taxa rank columns
tax_mat <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
# Save everything except feature IDs
tax_mat <- tax_mat[,-1]
# Make sampleids the rownames
rownames(tax_mat) <- tax$`Feature.ID`
# Make taxa table
TAX <- tax_table(tax_mat)
class(TAX)
## D: Create phyloseq object with adjusted files. (The phylogenetic tree doesn't need to be adjusted.)
# Merge all into a phyloseq object
mpt <- phyloseq(OTU, SAMP, TAX, phylo)
library(tidyverse)
library(dplyr)
library(phyloseq)
library(ape)
library(indicspecies)
# Formatting taxonomy
# Convert taxon strings to a table with separate taxa rank columns
tax_mat <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
# Save everything except feature IDs
tax_mat <- tax_mat[,-1]
# Make sampleids the rownames
rownames(tax_mat) <- tax$`Feature.ID`
# Make taxa table
TAX <- tax_table(tax_mat)
class(TAX)
View(tax_mat)
# Create phyloseq object with adjusted files. (The phylogenetic tree doesn't need to be adjusted.)
# Merge all into a phyloseq object
mpt <- phyloseq(OTU, SAMP, TAX, phylo)
# phylogenetic tree
phyloFP <- "mpt_export//rooted_tree_export//tree.nwk"
phylo <- read.tree(file=phyloFP)
# Create phyloseq object with adjusted files. (The phylogenetic tree doesn't need to be adjusted.)
# Merge all into a phyloseq object
mpt <- phyloseq(OTU, SAMP, TAX, phylo)
library(tidyverse)
library(dplyr)
library(phyloseq)
library(ape)
library(indicspecies)
meta <- read.csv("soil_metadata.csv", sep = ";", row.names = 1")
# soil metadata
metaFP <- "soil_metadata.tsv"
library(tidyverse)
library(dplyr)
library(phyloseq)
library(ape)
library(indicspecies)
metaFP <- "soil_metadata.tsv"
meta <- read.delim(file=metaFP, sep = "\t")
otuFP <- "mpt_export//filtered_table_export//filtered-feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
View(meta)
# Save everything except first column (X.OTU.ID) into a matrix
otu_mat <- as.matrix(otu[,-1])
# Make first column (X.OTU.ID) the rownames of the new matrix
rownames(otu_mat) <- otu$`X.OTU.ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
View(otu_mat)
View(meta)
metaFP <- "soil_metadata.tsv"
meta <- read.delim(file=metaFP, sep = "\t")
otuFP <- "mpt_export//filtered_table_export//filtered-feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
View(otu)
# Format OTU table as a matrix with rownames and colnames as OTUs and sampleIDs, respectively
# Save everything except first column (X.OTU.ID) into a matrix
otu_mat <- as.matrix(otu[,-1])
# Make first column (X.OTU.ID) the rownames of the new matrix
rownames(otu_mat) <- otu$`X.OTU.ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
View(otu_mat)
# soil metadata
metaFP <- "soil_metadata.tsv"
meta <- read.delim(file=metaFP, sep = "\t")
# OTU table
otuFP <- "mpt_export//filtered_table_export//filtered-feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# taxonomy file
taxFP <- "mpt_export//taxonomy_export//taxonomy.tsv"
tax <- read.delim(file=taxFP, sep = "\t")
# phylogenetic tree
phyloFP <- "mpt_export//rooted_tree_export//tree.nwk"
phylo <- read.tree(file=phyloFP)
## Adjust files to be read into a phyloseq object. Make the phyloseq object.
# Format OTU table as a matrix with rownames and colnames as OTUs and sampleIDs, respectively
# Save everything except first column (X.OTU.ID) into a matrix
otu_mat <- as.matrix(otu[,-1])
# Make first column (X.OTU.ID) the rownames of the new matrix
rownames(otu_mat) <- otu$`X.OTU.ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
# Format metadata
# Save everything except sample_name as new data frame
samp_df <- as.data.frame(meta[,-1])
# Make sample_name the rownames
rownames(samp_df)<- meta$'sample_name'
# Make phyloseq sample data with sample_data() function
SAMP <- sample_data(samp_df)
class(SAMP)
# Formatting taxonomy
# Convert taxon strings to a table with separate taxa rank columns
tax_mat <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
# Save everything except feature IDs
tax_mat <- tax_mat[,-1]
# Make sampleids the rownames
rownames(tax_mat) <- tax$`Feature.ID`
# Make taxa table
TAX <- tax_table(tax_mat)
class(TAX)
# Create phyloseq object with adjusted files. (The phylogenetic tree doesn't need to be adjusted.)
# Merge all into a phyloseq object
mpt <- phyloseq(OTU, SAMP, TAX, phylo)
View(otu)
View(otu)
View(otu_mat)
View(otu)
sample_names(OTU)
sample_names(TAX)
sample_names(SAMP)
View(SAMP)
View(tax)
View(otu_mat)
sample_names(tax)
View(SAMP)
View(otu_mat)
sample_names(SAMP)
sample_names(OTU)
View(samp_df)
# soil metadata
metaFP <- "soil_metadata.tsv"
meta <- read.delim(file=metaFP, sep = "\t")
# OTU table
otuFP <- "mpt_export//filtered_table_export//filtered-feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# taxonomy file
taxFP <- "mpt_export//taxonomy_export//taxonomy.tsv"
tax <- read.delim(file=taxFP, sep = "\t")
# phylogenetic tree
phyloFP <- "mpt_export//rooted_tree_export//tree.nwk"
phylo <- read.tree(file=phyloFP)
View(meta)
## A: Format OTU table as a matrix with rownames and colnames as OTUs and sampleIDs, respectively
# Save everything except first column (X.OTU.ID) into a matrix
otu_mat <- as.matrix(otu[,-1])
# Make first column (X.OTU.ID) the rownames of the new matrix
rownames(otu_mat) <- otu$`X.OTU.ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
View(otu_mat)
## B: Format sample metadata
# Save everything except sample_name as new data frame
samp_df <- as.data.frame(meta[,-1])
# Make sample_name the rownames
rownames(samp_df)<- meta$'sample_name'
# Make phyloseq sample data with sample_data() function
SAMP <- sample_data(samp_df)
class(SAMP)
View(samp_df)
View(SAMP)
## B: Format sample metadata
# Save everything except X.SampleID as new data frame
samp_df <- as.data.frame(meta[,-1])
# Make X.SampleID the rownames
rownames(samp_df)<- meta$'X.SampleID'
# Make phyloseq sample data with sample_data() function
SAMP <- sample_data(samp_df)
class(SAMP)
View(tax)
## C: Formatting taxonomy
# Convert taxon strings to a table with separate taxa rank columns
tax_mat <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
# Save everything except feature IDs
tax_mat <- tax_mat[,-1]
# Make sampleids the rownames
rownames(tax_mat) <- tax$`Feature.ID`
# Make taxa table
TAX <- tax_table(tax_mat)
class(TAX)
View(tax_mat)
class(TAX)
## D: Create phyloseq object with adjusted files. (The phylogenetic tree doesn't need to be adjusted.)
# Merge all into a phyloseq object
mpt <- phyloseq(OTU, SAMP, TAX, phylo)
## E: Looking at phyloseq object
# View components of phyloseq object with the following commands
otu_table(mpt)
sample_data(mpt)
tax_table(mpt)
phy_tree(mpt)
library(vegan)
# Remove ASVs that have less than 5 counts total
mpt_filt_nolow <- filter_taxa(mpt, function(x) sum(x)>5, prune = TRUE)
# Remove samples with less than 100 reads
mpt_final <- prune_samples(sample_sums(mpt_filt_nolow)>100, mpt_filt_nolow)
# Rarefy samples to a depth of 1000
rarecurve(t(as.data.frame(otu_table(mpt_final))), cex=0.1)
mpt_rare <- rarefy_even_depth(mpt_final, rngseed = 1, sample.size = 1000)
View(mpt_rare)
View(otu_mat)
### Step 2: Load in the soil metadata, OTU table, taxonomy file, and phylogenetic tree
# soil metadata
metaFP <- "soil_metadata.tsv"
meta <- read.delim(file=metaFP, sep = "\t")
# OTU table
otuFP <- "mpt_export//table_export//feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# taxonomy file
taxFP <- "mpt_export//taxonomy_export//taxonomy.tsv"
tax <- read.delim(file=taxFP, sep = "\t")
# phylogenetic tree
phyloFP <- "mpt_export//rooted_tree_export//tree.nwk"
phylo <- read.tree(file=phyloFP)
### Step 3: Adjust files to be read into a phyloseq object. Make the phyloseq object.
## A: Format OTU table as a matrix with rownames and colnames as OTUs and sampleIDs, respectively
# Save everything except first column (X.OTU.ID) into a matrix
otu_mat <- as.matrix(otu[,-1])
# Make first column (X.OTU.ID) the rownames of the new matrix
rownames(otu_mat) <- otu$`X.OTU.ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
## B: Format sample metadata
# Save everything except X.SampleID as new data frame
samp_df <- as.data.frame(meta[,-1])
# Make X.SampleID the rownames
rownames(samp_df)<- meta$'X.SampleID'
# Make phyloseq sample data with sample_data() function
SAMP <- sample_data(samp_df)
class(SAMP)
## C: Formatting taxonomy
# Convert taxon strings to a table with separate taxa rank columns
tax_mat <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
# Save everything except feature IDs
tax_mat <- tax_mat[,-1]
# Make sampleids the rownames
rownames(tax_mat) <- tax$`Feature.ID`
# Make taxa table
TAX <- tax_table(tax_mat)
class(TAX)
## D: Create phyloseq object with adjusted files. (The phylogenetic tree doesn't need to be adjusted.)
# Merge all into a phyloseq object
mpt <- phyloseq(OTU, SAMP, TAX, phylo)
## E: Looking at phyloseq object
# View components of phyloseq object with the following commands
otu_table(mpt)
sample_data(mpt)
tax_table(mpt)
phy_tree(mpt)
View(otu_mat)
View(otu_mat)
library(tidyverse)
library(dplyr)
library(phyloseq)
library(ape)
library(vegan)
library(indicspecies)
# soil metadata
metaFP <- "soil_metadata.tsv"
meta <- read.delim(file=metaFP, sep = "\t")
# OTU table
otuFP <- "mpt_export//filtered_table_export//filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "../mpt_export/filtered_table_export/filtered_feature-table.txt"
# taxonomy file
taxFP <- "../mpt_export/taxonomy_export/taxonomy.tsv"
# phylogenetic tree
phyloFP <- "../mpt_export/rooted_tree_export/tree.nwk"
## A: Format OTU table as a matrix with rownames and colnames as OTUs and sampleIDs, respectively
# Save everything except first column (X.OTU.ID) into a matrix
otu_mat <- as.matrix(otu[,-1])
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "../mpt_export/filtered_table_export/filtered_feature-table.txt.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "../mpt_export/filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
tax <- read.delim(file=taxFP, sep = "\t")
phylo <- read.tree(file=phyloFP)
getwd()
# OTU table
otuFP <- "..R processing/mpt_export/filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
setwd(C:/Users/anuch/OneDrive/Documents/Github/micb475/code/R Processing/mpt_export)
setwd('C:\\Users\\anuch\\OneDrive\\Documents\\Github\\micb475\\code\\R Processing\\mpt_export')
# OTU table
otuFP <- "../filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "../mpt_export/filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# soil metadata
metaFP <- "soil_metadata.tsv"
meta <- read.delim(file=metaFP, sep = "\t")
View(meta)
setwd('C:\\Users\\anuch\\OneDrive\\Documents\\Github\\micb475\\code\\R Processing')
# soil metadata
metaFP <- "soil_metadata.tsv"
meta <- read.delim(file=metaFP, sep = "\t")
# OTU table
otuFP <- "../mpt_export/filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "C:Users/anuch/OneDrive/Documents/Github/micb475/code/R Processing/mpt_export/filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "C:Users/anuch/OneDrive/Documents/Github/micb475/code/R_Processing/mpt_export/filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "../mpt_export/filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# taxonomy file
taxFP <- "../mpt_export/taxonomy_export/taxonomy.tsv"
tax <- read.delim(file=taxFP, sep = "\t")
# OTU table
otuFP <- "..//R Processing//mpt_export//filtered_table_export//filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "../R Processing//mpt_export//filtered_table_export//filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "../R Processing/mpt_export/filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "../mpt_export/filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "../mpt_export/filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file = otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "../mpt_export/filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "mpt_export/filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
getwd()
# OTU table
otuFP <- "mpt_export/filtered_table_export/filtered_feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# OTU table
otuFP <- "mpt_export/filtered_table_export/filtered-feature-table.txt"
otu <- read.delim(file=otuFP, sep ="\t", skip=1)
# taxonomy file
taxFP <- "mpt_export/taxonomy_export/taxonomy.tsv"
tax <- read.delim(file=taxFP, sep = "\t")
# phylogenetic tree
phyloFP <- "mpt_export/rooted_tree_export/tree.nwk"
phylo <- read.tree(file=phyloFP)
## A: Format OTU table as a matrix with rownames and colnames as OTUs and sampleIDs, respectively
# Save everything except first column (X.OTU.ID) into a matrix
otu_mat <- as.matrix(otu[,-1])
# Make first column (X.OTU.ID) the rownames of the new matrix
rownames(otu_mat) <- otu$`X.OTU.ID`
# Use the "otu_table" function to make an OTU table
OTU <- otu_table(otu_mat, taxa_are_rows = TRUE)
class(OTU)
## B: Format sample metadata
# Save everything except X.SampleID as new data frame
samp_df <- as.data.frame(meta[,-1])
# Make X.SampleID the rownames
rownames(samp_df)<- meta$'X.SampleID'
# Make phyloseq sample data with sample_data() function
SAMP <- sample_data(samp_df)
class(SAMP)
## C: Formatting taxonomy
# Convert taxon strings to a table with separate taxa rank columns
tax_mat <- tax %>% select(-Confidence)%>%
separate(col=Taxon, sep="; "
, into = c("Domain","Phylum","Class","Order","Family","Genus","Species")) %>%
as.matrix() # Saving as a matrix
View(tax_mat)
# Save everything except feature IDs
tax_mat <- tax_mat[,-1]
# Make sampleids the rownames
rownames(tax_mat) <- tax$`Feature.ID`
# Make taxa table
TAX <- tax_table(tax_mat)
class(TAX)
## D: Create phyloseq object with adjusted files. (The phylogenetic tree doesn't need to be adjusted.)
# Merge all into a phyloseq object
mpt <- phyloseq(OTU, SAMP, TAX, phylo)
## E: Looking at phyloseq object
# View components of phyloseq object with the following commands
otu_table(mpt)
sample_data(mpt)
tax_table(mpt)
phy_tree(mpt)
